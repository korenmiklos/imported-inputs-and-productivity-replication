-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /home/koren/projects/prod-AER-replicarion-package/code/../doc/swit
> cher_event_study.log
  log type:  text
 opened on:   2 Jul 2015, 20:52:59

. 
. do load_specification table3_baseline 0

. /*
> Replication code for "Imported Inputs and Productivity". Please cite as
>         Halpern, Koren and Szeidl. 2015. "Imported Inputs and Productivity." 
> American Economic Review.
> 
> Load the parameters estimated in a given specification, e.g.
> 
>         do load_specification table3_baseline 0
> */
. 
. set more off

. clear

. prog drop _all

. 
. local dir ../doc/mapreduce

. local inputfile `dir'/`1'/inputfile.dta

. local resultfile `dir'/`1'/`2'.csv

. 
. confirm file ../doc/mapreduce/`1'/TFP.dta

. confirm file `inputfile'

. confirm file `resultfile'

. confirm file map/`1'.do

. 
. 
. /* load parameters and set globals*/
. do map/`1'.do

. /*
> Replication code for "Imported Inputs and Productivity". Please cite as
>         Halpern, Koren and Szeidl. 2015. "Imported Inputs and Productivity." 
> American Economic Review.
> 
> Set necessary constants for a specification. 
> This do-file cannot be run by itself, it is called by "estimate_specification
> .do".
> */
. 
. global datafile ../data/impmanuf

. 
. /* LHS variable*/
. global output PlnQ

. 
. 
. /* There are two kinds of state variables.
> $states are in the production function.
> $bygroup, $dummies
>     affect the investment decision, hence are in the proxy, but do not direct
> ly affect TFP. */
. 
. /* proxies for demand */
. global demand lnQs2 corrected_firm_demand 

. /* RHS variables identified in the first stage*/
. global free ""

. 
. /* proxy for productivity */
. global proxy inv

. /* proxy function is estimated separately for each group */
. global bygroup year

. /* simple linear dummies to include in both proxy and prod fcn */
. global dummies nace2year me

. /* state variables */
. global states lnK lnL afterforeign

. /* these states only enter linearly */
. global linear demand_1 demand_2  

. /* instruments should include all states and lags */
. global instruments lnK L.lnK lnL L.lnL afterforeign L.afterforeign demand_1  
> L.demand_1 demand_2 

. /* This is set of variables indexing IAP */
. global IAPgroup egy

. 
. /* product count is based on the number of 4-digit categories */
. global Ni N4i

. /* this is not a sector-specific estimation */
. global sector 0

. 
. /* define expression for sample */
. global sample 1==1

. 
. 
end of do-file

. 
. insheet using `resultfile', comma case
(407 vars, 1 obs)

. 
. * name parameters consistenly with text
. ren b_lnK alphastar

. ren b_lnL betastar

. ren b_PlnM gammastar

. 
. * count IAP groups
. reshape long ahat shat, i(egy) j(IAPgroup)
(note: j = 1)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                        1   ->       1
Number of variables                 407   ->     408
j variable (1 values)                     ->   IAPgroup
xij variables:
                                  ahat1   ->   ahat
                                  shat1   ->   shat
-----------------------------------------------------------------------------

. su IAPgroup

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    IAPgroup |          1           1           .          1          1

. local IAPgroups = r(max)

. reshape wide
(note: j = 1)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                        1   ->       1
Number of variables                 408   ->     407
j variable (1 values)          IAPgroup   ->   (dropped)
xij variables:
                                   ahat   ->   ahat1
                                   shat   ->   shat1
-----------------------------------------------------------------------------

. 
. * save Gn into a matrix
. reshape long Gn, i(egy) j(n)
(note: j = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
> 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
>  52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 7
> 7 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 1
> 02 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 12
> 1 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140
>  141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 
> 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 1
> 79 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 19
> 8 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217
>  218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 
> 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 2
> 56 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 27
> 5 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294
>  295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 
> 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 3
> 33 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 35
> 2 353 354 355 356 357 358 359 360 361 362 363 364 365 366)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                        1   ->     367
Number of variables                 407   ->      42
j variable (367 values)                   ->   n
xij variables:
                      Gn0 Gn1 ... Gn366   ->   Gn
-----------------------------------------------------------------------------

. tsset n
        time variable:  n, 0 to 366
                delta:  1 unit

. mkmat Gn

. 
. reshape wide
(note: j = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
> 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
>  52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 7
> 7 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 1
> 02 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 12
> 1 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140
>  141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 
> 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 1
> 79 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 19
> 8 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217
>  218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 
> 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 2
> 56 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 27
> 5 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294
>  295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 
> 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 3
> 33 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 35
> 2 353 354 355 356 357 358 359 360 361 362 363 364 365 366)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                      367   ->       1
Number of variables                  42   ->     407
j variable (367 values)               n   ->   (dropped)
xij variables:
                                     Gn   ->   Gn0 Gn1 ... Gn366
-----------------------------------------------------------------------------

. 
. * save all other params into scalars
. drop Gn*

. unab params : _all

. foreach param in `params' {
  2.         scalar `param' = `param'[1]
  3. }

. 
. clear

. 
. * define functions to calculate Gn and its inverse
. /* mapping from N to GN and back */
. prog def GN
  1.     syntax newvarlist(max=1), n(string)
  2. 
.     qui gen `varlist' = .
  3.     forval i=1/367 {
  4.         qui replace `varlist' = Gn[`i',1] if `n'+1==`i'
  5.     }
  6. end

. 
. use ../doc/mapreduce/`1'/TFP

. drop __*

. 
. * create firm-specific variables
. qui su IAPgroup

. local IAPgroups = r(max)

. foreach X in a ahat shat B {
  2.         gen `X' = .
  3.         forval j=1/`IAPgroups' {
  4.                 replace `X' = `X'`j' if IAPgroup==`j'
  5.         }
  6. }
(127,472 missing values generated)
(127,472 real changes made)
(127,472 missing values generated)
(127,472 real changes made)
(127,472 missing values generated)
(127,472 real changes made)
(127,472 missing values generated)
(127,472 real changes made)

. drop Gn

. GN Gn, n(Ni)

. 
. gen nu = (PlnQ+log(price_2digit/100))-gammastar*(PlnM+log(price_material/100)
> )-gammastar*ahat*Gn-epsilonstar
(179 missing values generated)

. 
. * mean unobserved TFP shock
. gen ee = exp(epsilonstar)
(179 missing values generated)

. 
. * ensure that total industry revenue is same in model as in data
. * this does not have E(exp epsilon) yet
. gen data_revenue = exp(PlnQ+log(price_2digit/100))

. foreach X of var *_revenue {
  2.         egen mean_`X' = mean(`X'), by(nace2 year)
  3. }

. 
. gen weight = data_revenue/ee
(179 missing values generated)

. 
. egen sum_exp_e = sum(ee*weight) if !missing(ee,weight), by(nace2 year)
(179 missing values generated)

. egen sum_weight = sum(weight) if !missing(ee,weight), by(nace2 year)
(179 missing values generated)

. gen Eee = sum_exp_e/sum_weight
(179 missing values generated)

. 
. * See equation A6 in Appendix A
. gen model_revenue = gammastar^(gammastar/(1-gammastar))*exp((nu+gammastar*aha
> t*Gn)/(1-gammastar))*Eee^(1/(1-gammastar))
(179 missing values generated)

. gen pi0 = (1-gammastar)*gammastar^(gammastar/(1-gammastar))*exp(nu/(1-gammast
> ar))*Eee^(1/(1-gammastar))
(179 missing values generated)

. gen lnpi0 = ln(pi0)
(179 missing values generated)

. 
. *************** some automated tests
. * lnpi0 should be collinear with nu
. areg lnpi0 nu, a(nace2year)

Linear regression, absorbing indicators         Number of obs     =    127,293
                                                F(   1, 127030)   =          .
                                                Prob > F          =          .
                                                R-squared         =     1.0000
                                                Adj R-squared     =     1.0000
                                                Root MSE          =     0.0000

------------------------------------------------------------------------------
       lnpi0 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          nu |   4.038644          .        .       .            .           .
       _cons |  -2.067702          .        .       .            .           .
-------------+----------------------------------------------------------------
   nace2year |    F(261, 127030) =          .       .         (262 categories)

. assert e(r2)>0.9999

. * nu should have values whenever its components have
. count if !missing(PlnQ,PlnM,epsilonstar)
  127,293

. scalar n1 = r(N)

. count if !missing(nu)
  127,293

. assert n1 == r(N)

. * G(0)=0
. su Gn if Ni==0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
          Gn |     78,273           0           0          0          0

. assert r(mean)==0

. * each Ni has a G(Ni)
. gen byte noGn = missing(Gn) & !missing(Ni)

. su noGn

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
        noGn |    127,472           0           0          0          0

. assert r(max)==0

. drop noGn

. * each IAPgroup has a separate ahat
. tab IAPgroup

 group(egy) |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |    127,472      100.00      100.00
------------+-----------------------------------
      Total |    127,472      100.00

. scalar n1 = r(r)

. tab ahat

       ahat |      Freq.     Percent        Cum.
------------+-----------------------------------
   .3267903 |    127,472      100.00      100.00
------------+-----------------------------------
      Total |    127,472      100.00

. assert n1 == r(r)

. 
. set more on

. 
. 
end of do-file

. scalar deltastar = ahat1*gammastar

. 
. capture drop __*

. 
. confirm numeric variable omegastar epsilonstar

. confirm numeric variable firstforeig

. 
. capture prog drop ewindow

. program define ewindow
  1.         version 10
  2.         syntax varlist [, window(integer 4)]
  3.         
.         
.         local T `window'
  4.         
.         gen byte `varlist'time = year - `varlist'
  5. 
.         /* drop time outside the event window */
.     drop if `varlist'time<-`T' & !missing(`varlist'time)
  6.     drop if `varlist'time>`T' & !missing(`varlist'time)
  7.         
.         gen byte `varlist'before = `varlist'time<0 & `varlist'time>=-`T'
  8.         gen byte `varlist'after = `varlist'time>=0 & `varlist'time<=`T'
  9.         
.         /* create dummies manually for better reading */
.         gen byte `varlist'0 = `varlist'time==0
 10.         forval t = 1/`T' {
 11.                 gen byte `varlist'`t' = `varlist'time==`t'
 12.                 gen byte `varlist'_`t' = `varlist'time==-`t'
 13.         }
 14. 
.         /* flag firms that are always treated.
>            these have only after dummies, not before dummies */
.         egen byte always`varlist' = min(`varlist'after), by(id)
 15. end

. 
. /* first switch in the sample */
. egen int smp_foreign = min(cond(foreign>0 & !missing(foreign),year,.)), by(id
> )
(103064 missing values generated)

. /* first switch in original data */
. ren firstforeign pop_foreign

. 
. /* create event window */
. local T 3

. local foreign pop_foreign

. ewindow `foreign', window(`T')
(102,218 missing values generated)
(506 observations deleted)
(10,879 observations deleted)

. 
. assert pop_foreignafter==afterforeign

. 
. scalar eta = 1/b_demand_1

. gen omega_quantity = omegastar*eta/(eta-1)
(154 missing values generated)

. gen omegastar_revenue = omegastar+b_demand_1*demand_1+b_demand_2*demand_2
(154 missing values generated)

. 
. drop if missing(`foreign')
(102,218 observations deleted)

. drop if always`foreign'
(11,042 observations deleted)

. drop if missing(demand_1,demand_2)
(5 observations deleted)

. 
. * interaction regression to save difference in coefficients
. foreach X of var `foreign'_? `foreign'? {
  2.         gen byte treatmentX`X' = importer*`X'
  3. }

. reg omega_quantity `foreign'_? `foreign'? treatmentX*, nocons cluster(id)

Linear regression                               Number of obs     =      2,822
                                                F(14, 655)        =       2.93
                                                Prob > F          =     0.0002
                                                R-squared         =     0.0457
                                                Root MSE          =     .18758

                                   (Std. Err. adjusted for 656 clusters in id)
------------------------------------------------------------------------------
             |               Robust
omega_quan~y |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
pop_forei~_1 |  -.0362003   .0121692    -2.97   0.003    -.0600956   -.0123051
pop_forei~_2 |  -.0355863   .0141313    -2.52   0.012    -.0633346   -.0078381
pop_forei~_3 |  -.0247897   .0188097    -1.32   0.188    -.0617243    .0121448
pop_foreign0 |  -.0541755   .0161622    -3.35   0.001    -.0859114   -.0224395
pop_foreign1 |  -.0839234   .0171514    -4.89   0.000    -.1176017   -.0502451
pop_foreign2 |  -.0784007   .0183921    -4.26   0.000    -.1145154   -.0422861
pop_foreign3 |  -.0740438   .0180612    -4.10   0.000    -.1095087   -.0385789
treatment~_1 |   .0160236   .0157805     1.02   0.310    -.0149629      .04701
treatment~_2 |   .0127433   .0187899     0.68   0.498    -.0241524     .049639
treatment~_3 |   .0201453   .0238093     0.85   0.398    -.0266065     .066897
treatmentX~0 |   .0273655   .0192367     1.42   0.155    -.0104076    .0651386
treatment~n1 |   .0505064    .020245     2.49   0.013     .0107536    .0902593
treatment~n2 |   .0567139   .0213542     2.66   0.008     .0147829    .0986449
treatment~n3 |   .0388414   .0217299     1.79   0.074    -.0038273      .08151
------------------------------------------------------------------------------

. matrix Bq_ = e(b)

. matrix varq_ = vecdiag(e(V))

. 
. 
. test (treatmentXpop_foreign1+treatmentXpop_foreign2+treatmentXpop_foreign3)/3
> ==(treatmentXpop_foreign_1+treatmentXpop_foreign_2+treatmentXpop_foreign_3)/3

 ( 1)  - .3333333*treatmentXpop_foreign_1 - .3333333*treatmentXpop_foreign_2 -
       .3333333*treatmentXpop_foreign_3 + .3333333*treatmentXpop_foreign1 +
       .3333333*treatmentXpop_foreign2 + .3333333*treatmentXpop_foreign3 = 0

       F(  1,   655) =    2.63
            Prob > F =    0.1051

. 
. reg omegastar_revenue `foreign'_? `foreign'? treatmentX*, nocons cluster(id)

Linear regression                               Number of obs     =      2,822
                                                F(14, 655)        =    1380.09
                                                Prob > F          =     0.0000
                                                R-squared         =     0.9591
                                                Root MSE          =     .15397

                                   (Std. Err. adjusted for 656 clusters in id)
------------------------------------------------------------------------------
             |               Robust
omegastar_~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
pop_forei~_1 |   .7401438   .0100007    74.01   0.000     .7205066    .7597811
pop_forei~_2 |   .7377807   .0115826    63.70   0.000     .7150373    .7605242
pop_forei~_3 |   .7459901   .0163394    45.66   0.000     .7139062    .7780741
pop_foreign0 |   .7249957   .0132063    54.90   0.000     .6990639    .7509274
pop_foreign1 |   .7049782   .0136198    51.76   0.000     .6782344    .7317221
pop_foreign2 |   .7142898   .0143894    49.64   0.000     .6860349    .7425447
pop_foreign3 |   .7202126   .0140414    51.29   0.000      .692641    .7477842
treatment~_1 |   .0089466   .0130873     0.68   0.494    -.0167515    .0346447
treatment~_2 |   .0070239   .0157581     0.45   0.656    -.0239187    .0379665
treatment~_3 |   .0178623    .020823     0.86   0.391    -.0230256    .0587503
treatmentX~0 |    .027539   .0157491     1.75   0.081    -.0033858    .0584637
treatment~n1 |   .0468535   .0161357     2.90   0.004     .0151696    .0785374
treatment~n2 |   .0474278   .0167969     2.82   0.005     .0144456    .0804101
treatment~n3 |   .0334678   .0170135     1.97   0.050     .0000603    .0668754
------------------------------------------------------------------------------

. matrix Br_ = e(b)

. matrix varr_ = vecdiag(e(V))

. test (treatmentXpop_foreign1+treatmentXpop_foreign2+treatmentXpop_foreign3)/3
> ==(treatmentXpop_foreign_1+treatmentXpop_foreign_2+treatmentXpop_foreign_3)/3

 ( 1)  - .3333333*treatmentXpop_foreign_1 - .3333333*treatmentXpop_foreign_2 -
       .3333333*treatmentXpop_foreign_3 + .3333333*treatmentXpop_foreign1 +
       .3333333*treatmentXpop_foreign2 + .3333333*treatmentXpop_foreign3 = 0

       F(  1,   655) =    3.60
            Prob > F =    0.0582

. 
. clear

. foreach X in q r {
  2.         svmat B`X'_, names(matcol)
  3.         svmat var`X'_, names(matcol)
  4. }
number of observations will be reset to 1
Press any key to continue, or Break to abort
number of observations (_N) was 0, now 1

. 
. drop B*_`foreign'*

. drop var*_`foreign'*

. 
. gen egy = 1

. 
. reshape long Bq_treatmentX`foreign' Br_treatmentX`foreign' varq_treatmentX`fo
> reign' varr_treatmentX`foreign', i(egy) j(timestr) string
(note: j = 0 1 2 3 _1 _2 _3)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                        1   ->       7
Number of variables                  29   ->       6
j variable (7 values)                     ->   timestr
xij variables:
Bq_treatmentXpop_foreign0 Bq_treatmentXpop_foreign1 ... Bq_treatmentXpop_foreig
> n_3->Bq_treatmentXpop_foreign
Br_treatmentXpop_foreign0 Br_treatmentXpop_foreign1 ... Br_treatmentXpop_foreig
> n_3->Br_treatmentXpop_foreign
varq_treatmentXpop_foreign0 varq_treatmentXpop_foreign1 ... varq_treatmentXpop_
> foreign_3->varq_treatmentXpop_foreign
varr_treatmentXpop_foreign0 varr_treatmentXpop_foreign1 ... varr_treatmentXpop_
> foreign_3->varr_treatmentXpop_foreign
-----------------------------------------------------------------------------

. /* convert timestring like "_1" to numerical 1 */
. gen eventtime = .
(7 missing values generated)

. forval t = 0/`T' {
  2.         replace eventtime = `t' if timestr=="`t'"
  3.         replace eventtime = -`t' if timestr=="_`t'"
  4. }
(1 real change made)
(0 real changes made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)

. 
. ren Bq Bq

. ren Br Br

. 
. * normalize Bq[-1]=Br[-1]=0
. foreach X of var Bq Br {
  2.         qui su `X' if eventtime==-1
  3.         replace `X' = `X'-r(mean)
  4. }
(7 real changes made)
(7 real changes made)

. 
. 
. label var Bq "Quantity TFP premium of importers relative to nonimporters"

. label var Br "Revenue TFP premium of importers relative to nonimporters"

. label var eventtime "Years since foreign acquisition"

. line Bq Br eventtime, sort scheme(s2mono) legend(cols(1)) xlabel(-3 -2 -1 0 1
>  2 3) xline(-0.5, lpattern(.))

. graph save ../text/graphs/switcher_event_study_omegastar.gph, replace
(file ../text/graphs/switcher_event_study_omegastar.gph saved)

. 
. set more on

. 
. 
end of do-file
